b
intersect(e1, e2)
f <- system.file("srtm_61_10.tif", package="raster")
r <- raster(f)
f <- raster("srtm_61_10.tif")
levelplot(f)
levelplot(f, contour=TRUE)
class(f)
g <- projectRaster(f, UTM51)
g <- projectRaster(f, UTM51N)
f <- raster("srtm_61_10.tif", crs=WGS84)
g <- projectRaster(f, crs=UTM51N)
g
f <- raster("srtm_61_10.tif", crs=WGS84)
f <- raster("srtm_61_10.tif")
levelplot(f)
f <- raster("srtm_61_10.tif")
g <- projectRaster(f, crs=UTM51N)
UTM51N <- CRS("+init=epsg:32651") # UTM Zone 51 N
g <- projectRaster(f, crs=UTM51N)
central <- raster("srtm_61_10.tif")
central_east <- raster("srtm_62_10.tif")
central_whole <- mosaic(central, central_east, mean)
central_whole <- mosaic(central, central_east, fun=mean)
plot(central_whole)
class(central_whole)
levelplot(central_whole)
source('~/GitHub/rgis/rgis/main.R')
# PLOT INTERSECTED POLYGONS
intersectmap <- ggplot() + geom_polygon(data=intersectedprovinces.f, mapping=aes(x=long, y=lat, group=group, fill=POPDENSITY)) +
coord_equal() + labs(x = "Eastings (m)", y = "Northings (m)", fill = "Population Density(2010)")
intersectmap
# PLOT INTERSECTED POLYGONS
intersectmap_200km <- ggplot() + geom_polygon(data=intersectedprovinces_200km.f, mapping=aes(x=long, y=lat, group=group, fill=POPDENSITY)) +
coord_equal() + labs(x = "Eastings (m)", y = "Northings (m)", fill = "Population Density(2010)")
intersectmap_200km
library(slidify)
getwd()
author('Mark Vincent Clutario')
library(slidigy)
library(slidify)
slidify("index.Rmd")
slidify("index.Rmd")
provinces <- readShapePoly("PHL_provinces.shp", IDvar="id")
proj4string(provinces) <- WGS84
provinces.f <- fortify(provinces, CM="ID")
provinces_UTM <- spTransform(provinces, UTM51N)
protivnce_UTM.f <- fortify(provinces_UTM, CM="ID")
slidify("index.Rmd")
View(protivnce_UTM.f)
provinces@data
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
rm(protivnce_UTM.f)
View(provinces_UTM.f)
MAP_UTM <- ggplot() +
geom_polygon(data=provinces_UTM.f, mapping=aes(x=long, y=lat, group=group, fill=POPNO)) + coord_equal() +
labs(x = "Eastings (m)", y = "Northings (m)")
MAP_UTM
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
View(provincearea)
View(provincearea)
slidify("index.Rmd")
table(provincearea)
provincearea
provincearea <- gArea(provinces_UTM, byid=TRUE)
provincearea
provincearea <- data.frame(cbind(provincearea, names(provincearea)), row.names=NULL)
names(provincearea) <- c("area", "id")
slidify("index.Rmd")
?head
?head()
?head
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
provincearea <- gArea(provinces_UTM, byid=TRUE)
provincearea <- data.frame(cbind(provincearea, names(provincearea)), row.names=NULL)
provinces_UTM <- spTransform(provinces, UTM51N)
provinces_UTM.f <- fortify(provinces_UTM, CM="ID")
provinces_UTM.f <- merge(provinces_UTM.f, provinces_UTM@data, by.x="id", by.y="id")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
trackpoints_1 <- read.csv("track.csv", header=T)
trackpoints <- read.csv("track.csv", header = T)
coordinates(trackpoints) <- c("lng.00", "lat.00")
View(trackpoints_1)
x <- lapply(split(trackpoints, trackpoints$ID), function(x) Lines(list(Line(coordinates(x))), x$ID[1L]))
tracklines <- SpatialLines(x)
data <- data.frame(id = unique(trackpoints$ID))
rownames(data) <- data$ID
tracklines <- SpatialLinesDataFrame(tracklines, data)
spatiallines <- SpatialLines(list(Lines(list(Line(coordinates(trackpoints))), "1")))
View(data)
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
View(intersectedprovinces.f)
View(intersectedprovinces.f)
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
trackpoints_1 <- read.csv("track.csv", header=T)
View(trackpoints_1)
class(trackpoints_1)
class(trackpoints)
class(spatiallines)
class(tracklines)
class(tracklines.f)
View(tracklines.f)
?gArea
?readShapePoly
coordinates(trackpoints) <- c("lng.00", "lat.00")
View(trackpoints_1)
writePolyShape(trackpoints, "trackpoints")
writePolyShape(trackpoints, trackpoints)
writePointShape(trackpoints, trackpoints)
writePointsShape(trackpoints, trackpoints)
?writePointsShape
getwd()
writePointsShape(trackpoints, "trackpoints")
?writePointsShape
?readShapeLines
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
UTM51N
WGS
WGS84
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
?spTransform
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
class(intersectoni)
class(intersection)
intersection.f <- fortify(intersection, CM="id")
intersectmap <- ggplot() + geom_polygon(data=provinces_UTM.f,
mapping=aes(x=long, y=lat, group=group, fill=POPNO)) +
geom_line(data=intersection, mapping=aes(x=long, y=lat)) +
coord_equal() + labs(x = "Eastings (m)", y = "Northings (m)", fill = "Population (2010)")
intersectmap
intersection <- gIntersection(provinces_UTM, spatiallines_UTM, byid=TRUE)
intersects <- gIntersects(spatiallines_UTM, provinces_UTM, byid=TRUE)
intersectedprovinces <- provinces_UTM[intersects[,1],]
intersectedprovinces.f <- fortify(intersectedprovinces, CM="id")
intersectedprovinces.f <- merge(intersectedprovinces.f,
intersectedprovinces@data, by.x="id", by.y="id")
class(intersection)
intersection <- gIntersection(spatiallines_UTM, provinces_UTM, byid=TRUE)
?spatiallinesdataframe
??spatiallinesdataframe
intersection <- SpatialLinesDataFrame(intersection)
intersection <- SpatialLinesDataFrame(intersection, data=provinces_UTM@data)
intersects <- gIntersects(spatiallines_UTM, provinces_UTM, byid=TRUE,  match.ID=FALSE)
intersects <- gIntersects(spatiallines_UTM, provinces_UTM, byid=TRUE,  match.ID=TRUE)
intersection <- SpatialLinesDataFrame(intersection, data=provinces_UTM@data[1,])
intersection <- gIntersection(spatiallines_UTM, provinces_UTM, byid=TRUE)
intersection <- SpatialLinesDataFrame(intersection, data=provinces_UTM@data[1,])
provinces_UTM@data[1,]
intersection
intersection@data
intersection <- SpatialLinesDataFrame(intersection, data=tracklines_UTM@data[1,])
intersection <- gIntersection(spatiallines_UTM, provinces_UTM, byid=TRUE)
intersection <- SpatialLinesDataFrame(intersection, data=tracklines_UTM@data[1,])
tracklines_UTM@data[1,]
tracklines_UTM@data[2,]
tracklines_UTM@data
intersection[1]
intersection[2]
intersection[3]
intersectmap <- ggplot() + geom_polygon(data=provinces_UTM.f,
mapping=aes(x=long, y=lat, group=group, fill=POPNO)) +
geom_line(data=spatiallines, mapping=aes(x=long, y=lat)) +
coord_equal() + labs(x = "Eastings (m)", y = "Northings (m)", fill = "Population (2010)")
intersectmap
intersectmap <- ggplot() + geom_polygon(data=provinces_UTM.f,
mapping=aes(x=long, y=lat, group=group, fill=POPNO)) +
geom_line(data=tracklines_UTM.f, mapping=aes(x=long, y=lat)) +
coord_equal() + labs(x = "Eastings (m)", y = "Northings (m)", fill = "Population (2010)")
intersectmap
intersection <- gIntersection(bufferlines, provinces_UTM, byid=TRUE)
intersection
head(intersection)
head(provinces_UTM)
?gIntersection
intersection <- gIntersection(bufferlines, provinces_UTM, byid=TRUE, id=id)
intersection <- gIntersection(bufferlines, provinces_UTM, byid=TRUE, id=provinces_UTM$id)
provinces_UTM$id
intersection <- gIntersection(bufferlines, provinces_UTM, byid=TRUE, id=as.character(provinces_UTM$id))
intersection
intersection$PH.AB
intersection[1]
?writeShapeLines
?writePolyShape
writePolyShape(intersection, "intersection")
writePolyShape(provinces_UTM, "intersection")
plot(intersection)
intersection <- SpatialPolyDataFrame(intersection, provinces_UTM@data, match.ID = TRUE)
intersection <- SpatialPolygonsDataFrame(intersection, provinces_UTM@data, match.ID = TRUE)
intersection["PH.AB"]
intersection[PH.AB]
intersection['PH.AB']
intersection
intersection[39]
plot(intersection[39])
?gIntersection
intersection <- gIntersection(bufferlines, provinces_UTM, byid=TRUE, id=as.character(provinces_UTM$id), drop_not_poly=TRUE)
class(intersection[39])
class(intersection)
intersection <- SpatialPolygonsDataFrame(intersection, provinces_UTM@data)
?SpatialPolygonsDataFrame
intersecion_1 <- SpatialPolygonsDataFrame(intersection[1], provinces_UTM@data[1,])
intersecion_1 <- SpatialPolygonsDataFrame(intersection[1], provinces_UTM@data[1,], match.ID = FALSE)
provinces@data$id <- as.character(provinces@data$id)
intersection <- SpatialPolygonsDataFrame(intersection, provinces_UTM@data)
intersection <- SpatialPolygonsDataFrame(intersection, provinces_UTM@data, match.ID=FALSE)
intersection <- gIntersection(bufferlines, provinces_UTM, byid=TRUE, id=as.character(provinces_UTM$id), drop_not_poly=TRUE)
?getSpPolygonsIDSlots()
?getSpPPolygonsIDSlots()
?slot
getSpPPolygonsIDSlots(intersection)
ids <- as.factor(getSpPPolygonsIDSlots(intersection))
ids
provinces_UTM@data$id <- as.character(provinces_UTM@data$id)
class(provinces_UTM@data$id)
province_intersect <- provinces_UTM@data[which(provinces_UTM@data$id == ids)]
province_intersect <- provinces_UTM@data[which(provinces_UTM@data$id == ids),]
View(province_intersect)
ids
ids <- getSpPPolygonsIDSlots(intersection)
province_intersect <- provinces_UTM@data[which(provinces_UTM@data$id == ids),]
ids
which(provinces_UTM@data$id == ids)
?which
provinces_UTM@data$id == ids
province_intersect <- provinces_UTM@data[which(provinces_UTM@data$id %in% ids),]
View(province_intersect)
intersection.df <- SpatialPolygonsDataFrame(intersection, province_intersect)
row.names(province_intersect)
row.names(province_intersect) <- province_intersect$id
intersection.df <- SpatialPolygonsDataFrame(intersection, province_intersect)
intersection.df
head(intersection.df@data)
plot(intersection.df)
intersection.f <- fortify(intersection.df, CM="id")
intersectmap_200km <- ggplot() + geom_polygon(data=intersection.f,
mapping=aes(x=long, y=lat, group=group, fill=POPNO)) +
geom_polygon(data=bufferlines, mapping=aes(x=long, y=lat, alpha=0.4)) +
coord_equal() + labs(x = "Eastings (m)", y = "Northings (m)", fill = "Population(2010)")
intersectmap_200km
intersectmap_200km <- ggplot() + geom_polygon(data=intersection.f,
mapping=aes(x=long, y=lat, group=group, fill=POPNO)) +
geom_polygon(data=bufferlines, mapping=aes(x=long, y=lat, alpha=0.4)) +
coord_equal() + labs(x = "Eastings (m)", y = "Northings (m)", fill = "Population(2010)")
intersectmap_200km
intersection.f <- fortify(intersection.df, CM="id")
View(intersection.f)
intersectedprovinces.f <- merge(intersection.f,
intersection.df@data, by.x="id", by.y="id")
intersection.f <- merge(intersection.f,intersection.df@data, by.x="id", by.y="id")
intersectmap_200km <- ggplot() + geom_polygon(data=intersection.f,
mapping=aes(x=long, y=lat, group=group, fill=POPNO)) +
geom_polygon(data=bufferlines, mapping=aes(x=long, y=lat, alpha=0.4)) +
coord_equal() + labs(x = "Eastings (m)", y = "Northings (m)", fill = "Population(2010)")
intersectmap_200km
intersectmap_200km <- ggplot() + geom_polygon(data=intersectedprovinces_200km.f,
mapping=aes(x=long, y=lat, group=group, fill=POPNO)) +
geom_polygon(data=bufferlines, mapping=aes(x=long, y=lat, alpha=0.4)) +
coord_equal() + labs(x = "Eastings (m)", y = "Northings (m)", fill = "Population(2010)")
intersectmap_200km
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
intersection <- gIntersection(bufferlines, provinces_UTM, byid=TRUE, id=as.character(provinces_UTM$id))
ids <- getSpPPolygonsIDSlots(intersection)
province_intersect <- provinces_UTM@data[which(provinces_UTM@data$id %in% ids),]
row.names(province_intersect) <- province_intersect$id
province_intersect <- provinces_UTM@data[which(provinces_UTM@data$id %in% ids),]
row.names(province_intersect)
province_intersect <- provinces_UTM@data[which(provinces_UTM@data$id %in% ids),]
province_intersect <- provinces_UTM@data[which(provinces_UTM@data$id %in% ids),]
ids <- getSpPPolygonsIDSlots(intersection)
ids
province_intersect <- provinces_UTM@data[which(provinces_UTM@data$id %in% ids),]
rm(province_intersect)
province_intersect <- provinces_UTM@data[which(provinces_UTM@data$id %in% ids),]
row.names(province_intersect) <- province_intersect$id
ids <- getSpPPolygonsIDSlots(intersection)
row.names(province_intersect)
class(row.names(province_Intersect))
class(row.names(province_ntersect))
class(row.names(province_intersect))
which(provinces_UTM@data$id %in% ids)
ids
province_UTM@data$id
provinces_UTM@data$id
province_intersect <- provinces_UTM@data[which(provinces_UTM@data$id %in% ids),]
province_intersect <- provinces_UTM@data[which(provinces_UTM@data$id %in% ids),]
slidify("index.Rmd")
class(provinces_UTM@data$id)
provinces_UTM@data$id %in% ids
province_intersect <- provinces_UTM@data[provinces_UTM@data$id %in% ids,]
table(provinces_UTM@data$id %in% ids)
ids
provinces_UTM@data$id
provinces_UTM@data$id %in% ids
duplicated(provinces_UTM@data$id)
row.names(provinces_UTM@data)
intersection <- gIntersection(bufferlines, provinces_UTM, byid=TRUE)#, id=as.character(provinces_UTM$id))
ids <- getSpPPolygonsIDSlots(intersection)
ids
intersection <- gIntersection(bufferlines, provinces_UTM, byid=TRUE, id=as.character(provinces_UTM@data$id))
ids <- getSpPPolygonsIDSlots(intersection)
ids
province_intersect <- provinces_UTM@data[provinces_UTM@data$id %in% ids,]
row.names(province_intersect) <- province_intersect$id
row.names(province_intersect)
intersection.df <- SpatialPolygonsDataFrame(intersection, province_intersect)
ids <- getSpPPolygonsIDSlots(intersection)
ids
intersection <- gIntersection(bufferlines, provinces_UTM, byid=TRUE, id=row.names(provinces_UTM@data)#as.character(provinces_UTM@data$id))
)
intersection <- gIntersection(bufferlines, provinces_UTM, byid=TRUE, id=row.names(provinces_UTM@data))#as.character(provinces_UTM@data$id))
ids <- getSpPPolygonsIDSlots(intersection)
province_intersect <- provinces_UTM@data[row.names(provinces_UTM@data) %in% ids,]
intersection.df <- SpatialPolygonsDataFrame(intersection, province_intersect)
intersection.f <- fortify(intersection.df, CM="id")
intersection.f <- merge(intersection.f,intersection.df@data, by.x="id", by.y="id")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
intersection.f
intersection.f <- fortify(intersection.df, CM="id")
intersection.df
intersection.f
View(intersection.f)
intersection.df$rowid <- row.names(intersection.df)
intersection.df@data
intersection.f <- fortify(intersection.df, CM="id")
intersection.f <- merge(intersection.f,intersection.df@data, by.x="id", by.y="rowid")
slidify("index.Rmd")
intersection.f <- merge(intersection.f,intersection.df@data, by.x="id", by.y="rowid")
intersection.df$rowid
intersection.f <- merge(intersection.f,intersection.df@data, by.x="rowid", by.y="id")
intersection.f <- fortify(intersection.df, CM="id")
intersection.f <- merge(intersection.f,intersection.df@data, by.x="rowid", by.y="id")
?merge
head(intersection.f)
intersection.f <- merge(intersection.f,intersection.df@data, by.x="id", by.y="rowid")
View(intersection.f)
slidify("index.Rmd")
intersection.df <- SpatialPolygonsDataFrame(intersection, province_intersect)
intersection.df$rowid <- row.names(intersection.df)
intersection.f <- fortify(intersection.df, CM="id")
intersection.f <- merge(intersection.f,intersection.df@data, by.x="id", by.y="rowid")
View(intersection.f)
intersectmap_200km <- ggplot() + geom_polygon(data=intersection.f,
mapping=aes(x=long, y=lat, group=group, fill=POPNO)) +
geom_polygon(data=bufferlines, mapping=aes(x=long, y=lat, alpha=0.4)) +
coord_equal() + labs(x = "Eastings (m)", y = "Northings (m)", fill = "Population(2010)")
intersectmap_200km
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
intersects
lenght(intersects)
length(intersects)
slidify("index.Rmd")
duplicated(intersects)
duplicated(row.names(intersects))
MAP_UTM <- ggplot() + geom_polygon(data=provinces_UTM.f, mapping=aes(x=long, y=lat, group=group, fill=POPNO)) +
geom_point(data=trackpoints_1, mapping=aes(x=lng.00, y=lat.00, colour=windspeed.KT..00)) +
geom_line(data=tracklines_UTM.f, mapping=aes(x=long, y=lat, colour=windspeed.KT..00)) +
scale_fill_gradient(low="black", high="red") +
coord_equal() + ggtitle("Provincial Population (2010)") +
labs(x = "Eastings (m)", y = "Northings (m)", fill = "Population (2010)")
MAP_UTM
trackpoints_UTM.f
trackpoints_UTM.f <- fortify(trackpoints_UTM, CM="id")
MAP_UTM <- ggplot() + geom_polygon(data=provinces_UTM.f, mapping=aes(x=long, y=lat, group=group, fill=POPNO)) +
geom_point(data=trackpoints_UTM@data, mapping=aes(x=lng.00, y=lat.00, colour=windspeed.KT..00)) +
geom_line(data=tracklines_UTM.f, mapping=aes(x=long, y=lat, colour=windspeed.KT..00)) +
scale_fill_gradient(low="black", high="red") +
coord_equal() + ggtitle("Provincial Population (2010)") +
labs(x = "Eastings (m)", y = "Northings (m)", fill = "Population (2010)")
MAP_UTM
trackpoints_UTM@data
MAP_UTM <- ggplot() + geom_polygon(data=provinces_UTM.f, mapping=aes(x=long, y=lat, group=group, fill=POPNO)) +
geom_point(data=trackpoints_UTM@data, mapping=aes(x=X.m..00, y=Y.m..00, colour=windspeed.KT..00)) +
geom_line(data=tracklines_UTM.f, mapping=aes(x=long, y=lat, colour=windspeed.KT..00)) +
scale_fill_gradient(low="black", high="red") +
coord_equal() + ggtitle("Provincial Population (2010)") +
labs(x = "Eastings (m)", y = "Northings (m)", fill = "Population (2010)")
MAP_UTM
trackpoints_UTM
trackpoints_UTM <- spTransform(trackpoints, UTM51N)
trackpoints
View(trackpoints_1)
coordinates(trackpoints_UTM)
coordinates(trackpoints_UTM)$lat.00
class(coordinates(trackpoints_UTM))
coordinates(trackpoints_UTM)[1]
coordinates(trackpoints_UTM)[1,]
coordinates(trackpoints_UTM)[,1]
trackpoints_UTM$lat <- coordinates(trackpoints_UTM)[,2]
trackpoints_UTM$lng <- coordinates(trackpoints_UTM)[,1]
trackpoints_UTM@data
MAP_UTM <- ggplot() + geom_polygon(data=provinces_UTM.f, mapping=aes(x=long, y=lat, group=group, fill=POPNO)) +
geom_point(data=trackpoints_UTM@data, mapping=aes(x=lng, y=lat, colour=windspeed.KT..00)) +
geom_line(data=tracklines_UTM.f, mapping=aes(x=long, y=lat, colour=windspeed.KT..00)) +
scale_fill_gradient(low="black", high="red") +
coord_equal() + ggtitle("Provincial Population (2010)") +
labs(x = "Eastings (m)", y = "Northings (m)", fill = "Population (2010)")
MAP_UTM
slidify("index.Rmd")
trackpoints_UTM
trackpoints_UTM@data[1,]
slidify("index.Rmd")
slidify("index.Rmd")
MAP_UTM <- ggplot() + geom_polygon(data=provinces_UTM.f, mapping=aes(x=long, y=lat, group=group, fill=POPNO)) +
geom_point(data=trackpoints_UTM@data, mapping=aes(x=lng, y=lat, colour=windspeed.KT..00)) +
geom_line(data=tracklines_UTM.f, mapping=aes(x=long, y=lat, colour=windspeed.KT..00)) +
scale_fill_gradient(low="black", high="red") +
coord_equal() + ggtitle("Provincial Population (2010)") +
labs(x = "Eastings (m)", y = "Northings (m)", fill = "Population (2010)")
MAP_UTM
tracklines_UTM.f
MAP_UTM <- ggplot() + geom_polygon(data=provinces_UTM.f, mapping=aes(x=long, y=lat, group=group, fill=POPNO)) +
geom_point(data=trackpoints_UTM@data, mapping=aes(x=lng, y=lat, colour=windspeed.KT..00)) +
geom_line(data=tracklines_UTM.f, mapping=aes(x=long, y=lat.x, colour=windspeed.KT..00)) +
scale_fill_gradient(low="black", high="red") +
coord_equal() + ggtitle("Provincial Population (2010)") +
labs(x = "Eastings (m)", y = "Northings (m)", fill = "Population (2010)")
MAP_UTM
slidify("index.Rmd")
